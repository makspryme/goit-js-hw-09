{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,uBAClCC,UAAWF,SAASC,cAAc,sBAClCE,OAAQH,SAASC,cAAc,wBAC/BG,KAAMJ,SAASC,cAAc,UAwC/B,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OARgB,IAAIC,SAAQ,CAACC,EAASC,KAChCL,EACFI,EAAQ,C,SAAEN,E,UAAUC,IAEpBM,EAAO,C,SAAEP,E,UAAUC,GAAY,G,CA5CrCT,EAAKM,KAAKU,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAEC,iBAEF,MAAMC,EAAQnB,EAAKC,UAAUmB,MACvBC,EAAQrB,EAAKI,UAAUgB,MACvBf,EAASL,EAAKK,OAAOe,MAC3B,IAAIE,EAAW,EAEXC,EAAYC,OAAOL,GAEvBM,YAAW,KACTlB,EAAce,EAAUC,GACrBG,MAAK,EAAClB,SAAEA,EAAQC,UAAEA,MACjBX,EAAA6B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAc,IAEpEoB,OAAM,EAACrB,SAAEA,EAAQC,UAAEA,MAClBX,EAAA6B,OAAOG,QAAQ,sBAAoBtB,QAAiBC,MAAc,IAEtE,MAAMsB,EAAaC,aAAY,KAC7BV,GAAY,EACZC,GAAaC,OAAOH,GAEpBd,EAAce,EAAUC,GACrBG,MAAK,EAAClB,SAAEA,EAAQC,UAAEA,MACjBX,EAAA6B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAc,IAEpEoB,OAAM,EAACrB,SAAEA,EAAQC,UAAEA,MAClBX,EAAA6B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAc,IAsB1E,SAAoBD,EAAUH,EAAQ0B,GAChCvB,GAAYH,GACd4B,cAAcF,E,CArBZG,CAAWZ,EAAUjB,EAAQ0B,EAAW,GACvCV,EAAM,GACRF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\n// Notify.success('Good date!');\n\nconst refs = {\n  fisrtStep: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', startPromises);\n\nfunction startPromises(e) {\n  e.preventDefault();\n\n  const first = refs.fisrtStep.value;\n  const delay = refs.delayStep.value;\n  const amount = refs.amount.value;\n  let position = 1;\n\n  let timeDelay = Number(first);\n\n  setTimeout(() => {\n    createPromise(position, timeDelay)\n      .then(({ position, timeDelay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${timeDelay}ms`);\n      })\n      .catch(({ position, timeDelay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${timeDelay}ms`);\n      });\n    const intervalId = setInterval(() => {\n      position += 1;\n      timeDelay += Number(delay);\n\n      createPromise(position, timeDelay)\n        .then(({ position, timeDelay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${timeDelay}ms`);\n        })\n        .catch(({ position, timeDelay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${timeDelay}ms`);\n        });\n\n      clearTimer(position, amount, intervalId);\n    }, delay);\n  }, first);\n}\n\nfunction createPromise(position, timeDelay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, timeDelay });\n    } else {\n      reject({ position, timeDelay });\n    }\n  });\n\n  return promise;\n}\n\nfunction clearTimer(position, amount, intervalId) {\n  if (position == amount) {\n    clearInterval(intervalId);\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","fisrtStep","document","querySelector","delayStep","amount","form","$47d4ff9957288465$var$createPromise","position","timeDelay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","e","preventDefault","first","value","delay","position1","timeDelay1","Number","setTimeout","then","Notify","success","catch","failure","intervalId","setInterval","clearInterval","$47d4ff9957288465$var$clearTimer"],"version":3,"file":"03-promises.87c7eb9f.js.map"}